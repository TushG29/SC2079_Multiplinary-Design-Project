# Configuration for path-finding algorithms
OPTIMAL_DISTANCE_FOR_CAPTURING_IMAGES = 1

LEGAL_DIST_FROM_BORDER = 6
LEGAL_DIST_BTW_OBS = 6
NUM_OBS = 5
OBSTACLE_SAFETY_DISTANCE = 1

FPS = 60
PYGAME_SCALE = 30

# Grid dimensions
GRID_WIDTH = 20 * PYGAME_SCALE
GRID_HEIGHT = 20 * PYGAME_SCALE
NUM_OF_GRIDS = 20

# Pygame window dimensions
WIN_WIDTH = 1000
WIN_HEIGHT = GRID_HEIGHT

# Colors
BLACK = (0, 0, 0)
WHITE = (200, 200, 200)

COLOR_BG = (223, 230, 233)
COLOR_GRID_BG = (204, 255, 255)
COLOR_START = (102, 255, 102)

COLOR_GRID_LINE = BLACK

# Starting box
START_X = 0 * PYGAME_SCALE
START_Y = 4 * PYGAME_SCALE
START_WIDTH = 4 * PYGAME_SCALE
START_HEIGHT = 4 * PYGAME_SCALE

# Buttons
BTNWIDTH = 6 * PYGAME_SCALE
BTNHEIGHT = 1.4 * PYGAME_SCALE

BTNCOLOR_OBSTACLE = (0, 102, 204)
BTNCOLOR_START = (0, 204, 0)
BTNCOLOR_RESET = (204, 0, 0)
RESETBTN_X = (WIN_WIDTH - GRID_WIDTH - BTNWIDTH) / 2 + GRID_WIDTH
RESETBTN_Y = WIN_HEIGHT - 7 * PYGAME_SCALE
STARTBTN_X = (WIN_WIDTH - GRID_WIDTH - BTNWIDTH) / 2 + GRID_WIDTH
STARTBTN_Y = WIN_HEIGHT - 5 * PYGAME_SCALE
OBSBTN_X = (WIN_WIDTH - GRID_WIDTH - BTNWIDTH) / 2 + GRID_WIDTH
OBSBTN_Y = WIN_HEIGHT - 3 * PYGAME_SCALE

BTN_FONTSIZE = 20

BTN_RESETFUNC = "RESET"
BTN_OBSTACLEFUNC = "GENERATEOBSTACLE"
BTN_STARTFUNC = "START"

# Obstacle
OBSTACLE_WIDTH = 1 * PYGAME_SCALE
OBSTACLE_HEIGHT = 1 * PYGAME_SCALE

# Robot
ROBOT_START_ANGLE = 0
ROBOT_VELOCITY = 0.01
ROBOT_WIDTH = 3 * PYGAME_SCALE
ROBOT_HEIGHT = 3 * PYGAME_SCALE
